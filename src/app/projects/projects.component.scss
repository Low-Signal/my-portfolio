
.row {
    margin: auto;
    //margin-left: 20rem;
    //margin-right:20rem;

}

.outer {
    justify-content: right;
}

/* Page title */
h5 {
    padding-top: 2rem;
    text-align: center;
    font-weight: 700;
    font-size: 4rem;
    color: #3C4048;
}

/* hr in cards */
hr {
    height: .3rem;
    color: white;
    background-color: white;
    width: 50%;
    opacity: 1;
}

/* hr at top of page */
.hr2 {
    height: .3rem;
    border-style: solid;
    color: #00ABB3;
    background-color: #00ABB3;
    width: 45%;
    opacity: 1;
    border-radius: 5px;
}

/* adjusts right hr right at top of page */
.right-hr {
    margin-left: 10%
}

.hr3 {
    height: .3rem;
    border-style: solid;
    color: #00ABB3;
    background-color: #00ABB3;
    width: 33%;
    opacity: 1;
    margin: auto;
    border-radius: 5px;
}

/* For languages/frameworks used text */
span {
    font-weight: 600;
    font-size: 1.2rem;
}

body {
    height:auto;
    width: auto;
}

/* Timeline Container */
.timeline {
    margin: 4rem auto;
    padding: 1rem;
}

/* Card container */
.card {
    border: 0;
    background-color: transparent;
    position: relative;
    max-width: 30rem;
    min-width: 25rem;
}

/* setting padding based on even or odd */
.card:nth-child(odd) {
    padding: 2rem 0 2rem 2rem;
}

.card:nth-child(even) {
    padding: 2rem 2rem 2rem 0;
}

/* Global ::before */
.card::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid #00ABB3;
}

/* Setting the border of top, bottom, left */
.card:nth-child(odd)::before {
    left: 0px;
    top: -5px;
    bottom: -5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
}

/* Setting the border of top, bottom, right */
.card:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the first card */
.card:first-child::before {
    border-top-left-radius: 0 4.5rem 4.5rem 0;
}

/* Removing the border if it is the last card  and it's odd */
.card:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
}

/* Removing the border if it is the last card  and it's even */
.card:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
}

/* Information about the timeline */
.info {
    display: flex;
    flex-direction: column;
    background: #3C4048;
    color: white;
    border-radius: 0.7rem;
    padding: 0.7rem;
}

/* Title of the card */
.title {
    color: #00ABB3;
    position: relative;
}

/* Timeline dot  */
.title::before {
    content: "";
    position: absolute;
    width: 1.2rem;
    height: 1.2rem;
    background: white;
    border-radius: 100rem;
    border: 0.3rem solid #00ABB3;
}

/* title right if the card is even  */
.card:nth-child(even) > .info > .title {
    text-align: right;
}

/* span right if the card is even  */
.card:nth-child(even) > .info > span {
    text-align: right;
}

/* span right if the card is even  */
.card:nth-child(even) > .info > hr {
    margin-left: 50%;
}

/* setting dot to the left if the card is odd */
.card:nth-child(odd) > .info > .title::before {
    left: -3rem;
}

/* setting dot to the right if the card is odd */
.card:nth-child(even) > .info > .title::before {
    right: -3rem;
}
/*--------------------------------------------------Card 2--------------------------------------------*\

/* Removing the border if it is the first card */
.card2:first-child::before {
    border-top: 1;
    border-top-left-radius: 0;
}

/* Card container */
.card2 {
    border: 0;
    background-color: transparent;
    position: relative;
    max-width: 30rem;
    min-width: 25rem;
}

/* Global ::before */
.card2::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid #00ABB3;
}

/* setting padding based on even or odd */
.card2:nth-child(even) {
    padding: 2rem 0 2rem 2rem;
}
.card2:nth-child(odd) {
    padding: 2rem 2rem 2rem 0;
}

/* Setting the border of top, bottom, left */
.card2:nth-child(even)::before {
    left: 0px;
    top: -5px;
    bottom: -5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
}

/* Setting the border of top, bottom, right */
.card2:nth-child(odd)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
}

/* Removing the border if it is the last card  and it's even*/
.card2:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
}

/* Removing the border if it is the last card  and it's odd */
.card2:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
}

/* text right if the card is odd  */
.card2:nth-child(odd) > .info > .title {
    text-align: right;
}

/* text right if the card is odd  */
.card2:nth-child(odd) > .info > span {
    text-align: right;
}

/* hr right if the card is odd  */
.card2:nth-child(odd) > .info > hr {
    margin-left: 50%;
}
    
/* setting dot to the left if the card is even */
.card2:nth-child(even) > .info > .title::before {
    left: -3rem;
}

/* setting dot to the right if the card is odd */
.card2:nth-child(odd) > .info > .title::before {
    right: -3rem;
}